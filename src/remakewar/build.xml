<?xml version="1.0" encoding="UTF-8"?>
<project name="make customize infoscoop war file" default="all" basedir=".">
	<property name="basedir" value="." />
	<property name="app.name" value="infoscoop" />
	<property name="custom.home" location="${basedir}/Customization"/>
	<property name="collect.home" location="${basedir}/collect"/>
	<property name="dist.home" value="${basedir}/dist" />

	<tstamp>
		<format property="remake.timestamp" pattern="yyyyMMddHHmmss" locale="ja"/>
	</tstamp>
	
	<path id="project.classpath">
		<fileset dir="${basedir}/lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="project.classpath" />
	
	<delete file="${basedir}/build.properties.tmp"/>
	<copy tofile="${basedir}/build.properties.tmp" file="${basedir}/build.properties" encoding="UTF-8">
		<filterchain>
			<filterreader classname="org.apache.tools.ant.filters.StripLineBreaks">
                <!-- remove BOM code -->
				<param name="linebreaks" value="&#65279;"/>
			</filterreader>
		</filterchain>
	</copy>
	<property file="${basedir}/build.properties.tmp"/>
	<delete file="${basedir}/build.properties.tmp"/>
	
	<target name="all" depends="clean, prepare, copy, collect, dist, sweep" description="Remake WAR file" />
	
	<!-- remove distribution directory -->
	<target name="clean" description="Delete old build directory">
		<delete dir="${dist.home}" />
		<delete dir="${collect.home}" />
	</target>
	
	<!-- make distoribution directory -->
	<target name="prepare" depends="clean">
		<mkdir dir="${basedir}/dist" />
		<mkdir dir="${basedir}/collect" />
	</target>
	
	<!-- unzip infoscoop war file to temporary directory -->
	<target name="copy" depends="prepare" description="Unwar template WAR to work directory">
		<unwar src="${basedir}/${app.name}.war" dest="${collect.home}"/>
	</target>
	
	<!-- copy customize file to temporary directory -->
	<target name="collect" depends="copy" description="Collect customized configuration file">
		<copy todir="${collect.home}" failonerror="false" overwrite="true">
			<fileset dir="${custom.home}"/>
		</copy>
	</target>
	
	<target name="replaceWebXml" depends="replace-loginAuthenthication,replace-uidHeader,replace-usernameHeader,replace-customizeSSOFilter,replace-customizeSetRoleHeaderFilter,replace-logoutUrlParam,replace-uidIgnoreCase,replace-msd.dataSource"
		description="Replace web.xml configurations">
		<loadfile property="principalHeaderList" srcFile="principalHeaderList.json" encoding="UTF-8">
			<filterchain>
				<!-- remove BOM code -->
				<filterreader classname="org.apache.tools.ant.filters.StripLineBreaks">
					<param name="linebreaks" value="&#65279;"/>
				</filterreader>
			</filterchain>
		</loadfile>
		<replaceregexp file="${collect.home}/WEB-INF/classes/accountservices.xml"
			match="&lt;!--start of headerPrincipalConfig.*end of headerPrincipalConfig--&gt;"
			replace="${principalHeaderList}"
			flags="s"
			encoding="UTF-8"/>
		<replaceregexp file="${collect.home}/WEB-INF/web.xml"
			match="&lt;!--start dataSource.jndiName--&gt;.*&lt;!--end dataSource.jndiName--&gt;"
			replace="${dataSource.jndiName}"
			flags="s"
			encoding="UTF-8"/>
		<replaceregexp file="${collect.home}/WEB-INF/web.xml"
			match="@WEBAPP.ISCOOP.ROOT.KEY@"
			replace="${remake.timestamp}"
			flags="s"
			encoding="UTF-8"/>
		<if>
			<not>
				<equals arg1="${dataSource.schema}" arg2="" />
			</not>
			<then>
				<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
					<replacetoken><![CDATA[<!--Migration Database Schema-->]]></replacetoken>
					<replacevalue><![CDATA[
	<context-param>
		<param-name>liquibase.schema.default</param-name>
		<param-value>]]>@SCHEMA_NAME@<![CDATA[</param-value>
	</context-param>
			]]></replacevalue>
				</replace>			
			</then>
		</if>
		<replaceregexp file="${collect.home}/WEB-INF/web.xml"
			match="@SCHEMA_NAME@"
			replace="${dataSource.schema}"
			flags="s"
			encoding="UTF-8"/>
		<replaceregexp file="${collect.home}/WEB-INF/web.xml"
			match="&lt;!--Migration Database TableSpace--&gt;"
			replace="${dataSource.tablespace}"
			flags="s"
			encoding="UTF-8"/>
		<replaceregexp file="${collect.home}/WEB-INF/web.xml"
			match="&lt;!--start migration jndiName--&gt;.*&lt;!--end migration jndiName--&gt;"
			replace="java:comp/env/${dataSource.jndiName}"
			flags="s"
			encoding="UTF-8"/>
	</target>
	<target name="replace-loginAuthenthication" if="sessionCreateConfig.loginAuthentication">
		<replaceregexp file="${collect.home}/WEB-INF/classes/accountservices.xml"
			match="&lt;!--start loginAuthentication--&gt;.*&lt;!--end loginAuthentication--&gt;"
			replace="${sessionCreateConfig.loginAuthentication}"
			flags="s"
			encoding="UTF-8"/>
	</target>
	<target name="replace-uidHeader" if="sessionCreateConfig.uidHeader">
		<replaceregexp file="${collect.home}/WEB-INF/classes/accountservices.xml"
			match="&lt;!--uidHeader--&gt;"
			replace="${sessionCreateConfig.uidHeader}"
			flags="s"
			encoding="UTF-8"/>
	</target>
	<target name="replace-usernameHeader" if="sessionCreateConfig.usernameHeader">
		<replaceregexp file="${collect.home}/WEB-INF/classes/accountservices.xml"
			match="&lt;!--usernameHeader--&gt;"
			replace="${sessionCreateConfig.usernameHeader}"
			flags="s"
			encoding="UTF-8"/>
	</target>
	<target name="replace-customizeSSOFilter" if="customizeSSOFilterClass">
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
			<replacetoken><![CDATA[<!--CustomizeSSOFilter-->]]></replacetoken>
			<replacevalue><![CDATA[
	<filter>
		<filter-name>CustomizeSSOFilter</filter-name>
		<filter-class>%{customizeSSOFilterClass}</filter-class>
		<init-param>
			<param-name>excludePath</param-name>
			<param-value>/xmlrpc,/login.jsp,/gadgetsrv,/jsonproxy,/proxy,/js*,/rpc_relay.html</param-value>
		</init-param>
		%{opIdentifierInitParam}
	</filter>
			]]></replacevalue>
		</replace>
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true"
			token="%{customizeSSOFilterClass}" value="${customizeSSOFilterClass}"/>
		<antcall target="replace-opIdentifierParam"/>
		<antcall target="remove-opIdentifierParam"/>
		
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
			<replacetoken><![CDATA[<!--CustomizeSSOFilterMapping-->]]></replacetoken>
			<replacevalue><![CDATA[
	<filter-mapping>
		<filter-name>CustomizeSSOFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
			]]></replacevalue>
		</replace>
	</target>
        
	<target name="replace-opIdentifierParam" if="customizeSSOFilterClass.opIdentifier">
        <replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true"
            token="%{opIdentifierInitParam}">
			<replacevalue><![CDATA[
		<init-param>
			<param-name>opIdentifier</param-name>
			<param-value>%{opIdentifierValue}</param-value>
		</init-param>
			]]></replacevalue>
		</replace>
        <replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true"
            token="%{opIdentifierValue}" value="${customizeSSOFilterClass.opIdentifier}"/>
    </target>
	<target name="remove-opIdentifierParam" unless="customizeSSOFilterClass.opIdentifier">
        <replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true"
            token="%{opIdentifierInitParam}" value=""/>
    </target>
        
	<target name="replace-logoutUrlParam" if="logoutUrl">
        <replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true"
            token="&lt;!--logoutUrl--&gt;" value="${logoutUrl}"/>
    </target>
    
	<target name="replace-customizeSetRoleHeaderFilter" if="customizeSetRoleHeaderFilterClass">
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
			<replacetoken><![CDATA[<!--CustomizeSetRoleHeaderFilter-->]]></replacetoken>
			<replacevalue><![CDATA[
	<filter>
		<filter-name>CustomizeSetRoleHeaderFilter</filter-name>
		<filter-class>%{customizeSetRoleHeaderFilterClass}</filter-class>
	</filter>
			]]></replacevalue>
		</replace>
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true"
			token="%{customizeSetRoleHeaderFilterClass}" value="${customizeSetRoleHeaderFilterClass}"/>
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
			<replacetoken><![CDATA[<!--CustomizeSetRoleHeaderFilterMapping-->]]></replacetoken>
			<replacevalue><![CDATA[
	<filter-mapping>
		<filter-name>CustomizeSetRoleHeaderFilter</filter-name>
		<url-pattern>/index.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CustomizeSetRoleHeaderFilter</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>
			]]></replacevalue>
		</replace>
	</target>
	
	<target name="replace-uidIgnoreCase" if="sessionCreateConfig.uidIgnoreCase">
		<replaceregexp file="${collect.home}/WEB-INF/classes/accountservices.xml"
			match="&lt;!--start sessionCreateConfig.uidIgnoreCase--&gt;.*&lt;!--end sessionCreateConfig.uidIgnoreCase--&gt;"
			replace="${sessionCreateConfig.uidIgnoreCase}"
			flags="s"
			encoding="UTF-8"/>
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
			<replacetoken><![CDATA[<!--CheckDuplicateUidFilterMapping-->]]></replacetoken>
			<replacevalue><![CDATA[
	<filter-mapping>
		<filter-name>CheckDuplicateUidFilter</filter-name>
		<url-pattern>/index.jsp</url-pattern>
	</filter-mapping>
			]]></replacevalue>
		</replace>
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
			<replacetoken><![CDATA[<!--MergeProfileServletMapping-->]]></replacetoken>
			<replacevalue><![CDATA[
	<servlet-mapping>
		<servlet-name>MergeProfileServlet</servlet-name>
		<url-pattern>/mergeprofile</url-pattern>
	</servlet-mapping>
			]]></replacevalue>
		</replace>
	</target>
	
	<target name="replace-msd.dataSource" if="msd.dataSource.jndiName">
		<replace file="${collect.home}/WEB-INF/web.xml" encoding="utf-8" summary="true">
			<replacetoken><![CDATA[<!--msd.dataSource-->]]></replacetoken>
			<replacevalue><![CDATA[
  <resource-ref>
    <res-ref-name>@MSD.DATA_SOURCE@</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
			]]></replacevalue>
			<replacefilter token="@MSD.DATA_SOURCE@" value="${msd.dataSource.jndiName}"/>
		</replace>
	</target>
	
	<target name="replaceDataSourceXml">
		<if>
			<not>
				<equals arg1="${dataSource.schema}" arg2="" />
			</not>
			<then>
				<replaceregexp file="${collect.home}/WEB-INF/classes/datasource.xml"
					match="&lt;!--Database Schema Name--&gt;"
					replace="&lt;prop key=&quot;hibernate.default_schema&quot;&gt;${dataSource.schema}&lt;/prop&gt;"
					flags="s"
					encoding="UTF-8"/>		
			</then>
		</if>
		
		<replaceregexp file="${collect.home}/WEB-INF/classes/datasource.xml"
			match="&lt;!--start dataSource.jndiName--&gt;.*&lt;!--end dataSource.jndiName--&gt;"
			replace="java:comp/env/${dataSource.jndiName}"
			flags="s"
			encoding="UTF-8"/>
		<replaceregexp file="${collect.home}/WEB-INF/classes/datasource.xml"
			match="&lt;!--start dataSource.dialect--&gt;.*&lt;!--end dataSource.dialect--&gt;"
			replace="${dataSource.dialect}"
			flags="s"
			encoding="UTF-8"/>
	</target>
	
	<target name="replaceServicesXml">
		<antcall target="mergeServicesXml"/>
		<antcall target="replace-msdServiceUrl"/>
	</target>
	
	<target name="mergeServicesXml" if="accountAccessConfig">
		<delete file="temp.xml"/>
		<delete file="temp.txt"/>
		<filter token="DATA_SOURCE" value="${msd.dataSource.jndiName}"/>
		<filter token="SCHEMA" value="${msd.dataSource.schema}"/>
		<filter token="DIALECT" value="${msd.dataSource.dialect}"/>
		<copy tofile="temp.xml" file="${accountAccessConfig}"
			filtering="true" encoding="utf-8"/>
		<xslt style="remove-root.xslt" in="temp.xml" out="temp.txt">
		  <xmlcatalog>
            <dtd publicId="-//SPRING//DTD BEAN//EN" location="spring-beans.dtd"/>
		  </xmlcatalog>
        </xslt>
		<loadfile property="accountAccessService" srcfile="temp.txt" encoding="UTF-8">
			<filterchain>
				<!-- remove BOM code -->
				<filterreader classname="org.apache.tools.ant.filters.StripLineBreaks">
					<param name="linebreaks" value="&#65279;"/>
				</filterreader>
			</filterchain>
		</loadfile>
		<delete file="temp.xml"/>
		<delete file="temp.txt"/>
		<replaceregexp file="${collect.home}/WEB-INF/classes/accountservices.xml"
			match="&lt;!--start of accountAccessService--&gt;.*&lt;!--end of accountAccessService--&gt;"
			replace="${accountAccessService}"
			flags="s"
			encoding="UTF-8"/>
	</target>
	
	<target name="replace-msdServiceUrl" if="authenticationServlet.msdServiceUrl">
		<replaceregexp file="${collect.home}/WEB-INF/classes/accountservices.xml"
			match="&lt;!--start authenticationServlet.msdServiceUrl--&gt;.*&lt;!--end authenticationServlet.msdServiceUrl--&gt;"
			replace="${authenticationServlet.msdServiceUrl}"
			flags="s"
			encoding="UTF-8"/>
	</target>

	<!-- recreate war file -->
	<target name="dist" depends="collect,replaceWebXml,replaceDataSourceXml,replaceServicesXml" description="Build WAR file">
		<war destfile="${dist.home}/${app.name}.war" basedir="${collect.home}" webxml="${collect.home}/WEB-INF/web.xml"/>
	</target>
	
	<!-- cleen temporary files -->
	<target name="sweep" depends="dist">
		<delete dir="${collect.home}" />
	</target>
</project>