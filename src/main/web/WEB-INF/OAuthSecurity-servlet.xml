<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- OAuth2 Token Dispatcher -->
	<http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager"
		xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<anonymous enabled="false" />
		<http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<!-- include this only if you need to authenticate clients via request parameters -->
		<custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<!-- OAuth2 protected resources path -->
	<http pattern="/isapi/**" create-session="never" entry-point-ref="oauthAuthenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager" xmlns="http://www.springframework.org/schema/security">
		<anonymous enabled="false" />
		<intercept-url pattern="/isapi/v1/admin/profiles/**" access="ROLE_ADMIN,SCOPE_USERPROFILE" />
		<intercept-url pattern="/isapi/v1/admin/tablayouts/**" access="ROLE_ADMIN,SCOPE_TABLAYOUT" />
		<intercept-url pattern="/isapi/v1/user/menus/**" access="ROLE_ADMIN,SCOPE_MENU" />
		<custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
		<access-denied-handler ref="oauthAccessDeniedHandler" />
	</http>

	<!-- login view -->
	<http access-denied-page="/oauth_login.jsp?authorization_error=true" disable-url-rewriting="true" xmlns="http://www.springframework.org/schema/security">
		<intercept-url pattern="/oauth/**" access="IS_AUTHENTICATED_FULLY" />
		<form-login authentication-failure-url="/oauth_login.jsp?authentication_error=true" default-target-url="/index.jsp"
			login-page="/oauth_login.jsp" login-processing-url="/login.do" />
		<anonymous />
	</http>

	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="infoscoop" />
		<property name="exceptionRenderer" ref="oauthExceptionRender" />
	</bean>

	<bean id="clientAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="infoscoop/client" />
		<property name="typeName" value="Basic" />
		<property name="exceptionRenderer" ref="oauthExceptionRender" />
	</bean>

	<bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	<bean id="oauthExceptionRender" class="org.infoscoop.api.oauth2.provider.ISOAuth2ExceptionRenderer"/>

	<bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
    	<constructor-arg ref="roleHierarchy" />
	</bean>
	<bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
    	<property name="hierarchy">
    	    <value>
    	    	ROLE_CLIENT > ROLE_ADMIN
    	    </value>
    	</property>
	</bean>

	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased" xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<ref bean="roleVoter"/>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<!-- Authentication Manager -->
	<authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider user-service-ref="clientDetailsUserService" />
	</authentication-manager>
	<authentication-manager alias="authenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider ref="authenticationProvider"/>
 	</authentication-manager>
	<bean id="authenticationProvider" class="org.infoscoop.api.oauth2.provider.ISAuthenticationProvider" />

	<bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<!-- OAuth Token Service -->
	<bean id="tokenStore" class="org.infoscoop.api.oauth2.provider.ISTokenStore" />

	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="clientDetails" />
		<!-- default 12 hours -->
		<property name="accessTokenValiditySeconds" value="43200" />
		<!-- default 30 days -->
		<property name="refreshTokenValiditySeconds" value="2592000" />		
	</bean>

	<bean id="userApprovalHandler" class="org.infoscoop.api.oauth2.provider.UserApprovalHandler">
		<property name="tokenServices" ref="tokenServices" />
	</bean>

	<oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices" user-approval-handler-ref="userApprovalHandler">
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password />
	</oauth:authorization-server>

	<oauth:resource-server id="resourceServerFilter" resource-id="infoscoop" token-services-ref="tokenServices" />

	<!-- OAuth2 client detail settings -->
	<bean id="clientDetails" class="org.infoscoop.api.oauth2.provider.ISClientDetailsService">
           <property name="resourceId" value="infoscoop"/>
    </bean>

	<!-- application settings -->
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<sec:global-method-security pre-post-annotations="enabled" proxy-target-class="true">
		<sec:expression-handler ref="oauthExpressionHandler" />
	</sec:global-method-security>
	<oauth:expression-handler id="oauthExpressionHandler" />
	<oauth:web-expression-handler id="oauthWebExpressionHandler" />

	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsp/oauth/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!-- Override the default mappings for approval and error pages -->
	<bean id="accessConfirmationController" class="org.infoscoop.api.oauth2.provider.AccessConfirmationController">
		<property name="clientDetailsService" ref="clientDetails" />
	</bean>
</beans>
